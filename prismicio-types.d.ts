// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Article documents */
interface ArticleDocumentData {
    /**
     * Title field in *Article*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: article.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Author field in *Article*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: article.author
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    author: prismicT.RelationField;
    /**
     * Publication Date field in *Article*
     *
     * - **Field Type**: Date
     * - **Placeholder**: *None*
     * - **API ID Path**: article.publication_date
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/date
     *
     */
    publication_date: prismicT.DateField;
    /**
     * Featured Image field in *Article*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: article.featured_image
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    featured_image: prismicT.ImageField<never>;
}
/**
 * Article document from Prismic
 *
 * - **API ID**: `article`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ArticleDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<ArticleDocumentData>, "article", Lang>;
/** Content for Author documents */
interface AuthorDocumentData {
    /**
     * Name field in *Author*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: author.name
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    name: prismicT.TitleField;
}
/**
 * Author document from Prismic
 *
 * - **API ID**: `author`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AuthorDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<AuthorDocumentData>, "author", Lang>;
/** Content for Event documents */
interface EventDocumentData {
    /**
     * Name field in *Event*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: event.name
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    name: prismicT.TitleField;
    /**
     * Description field in *Event*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: event.description
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    description: prismicT.KeyTextField;
    /**
     * Start Date field in *Event*
     *
     * - **Field Type**: Timestamp
     * - **Placeholder**: *None*
     * - **API ID Path**: event.start_date
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/timestamp
     *
     */
    start_date: prismicT.TimestampField;
    /**
     * End Date field in *Event*
     *
     * - **Field Type**: Timestamp
     * - **Placeholder**: *None*
     * - **API ID Path**: event.end_date
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/timestamp
     *
     */
    end_date: prismicT.TimestampField;
}
/**
 * Event document from Prismic
 *
 * - **API ID**: `event`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type EventDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<EventDocumentData>, "event", Lang>;
/** Content for FAQs documents */
interface FaqsDocumentData {
    /**
     * Title field in *FAQs*
     *
     * - **Field Type**: Title
     * - **Placeholder**: Title for the FAQs
     * - **API ID Path**: faqs.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Questions field in *FAQs*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: faqs.questions[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    questions: prismicT.GroupField<Simplify<FaqsDocumentDataQuestionsItem>>;
}
/**
 * Item in FAQs → Questions
 *
 */
export interface FaqsDocumentDataQuestionsItem {
    /**
     * Question field in *FAQs → Questions*
     *
     * - **Field Type**: Title
     * - **Placeholder**: A question
     * - **API ID Path**: faqs.questions[].question
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    question: prismicT.TitleField;
    /**
     * Answer field in *FAQs → Questions*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: The answer to the question
     * - **API ID Path**: faqs.questions[].answer
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    answer: prismicT.RichTextField;
}
/**
 * FAQs document from Prismic
 *
 * - **API ID**: `faqs`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FaqsDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<FaqsDocumentData>, "faqs", Lang>;
export type AllDocumentTypes = ArticleDocument | AuthorDocument | EventDocument | FaqsDocument;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { ArticleDocumentData, ArticleDocument, AuthorDocumentData, AuthorDocument, EventDocumentData, EventDocument, FaqsDocumentData, FaqsDocumentDataQuestionsItem, FaqsDocument, AllDocumentTypes };
    }
}
